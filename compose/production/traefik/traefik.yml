log:
  level: INFO

entryPoints:
  web:
    # http
    address: ":80"
    http:
      # https://docs.traefik.io/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ":443"

  flower:
    address: ":5555"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "support@opensource.legal"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:

    flower-secure-router:
      rule: "Host(`opencontracts.opensource.legal`) || Host(`www.opencontracts.opensource.legal`) && PathPrefix(`/flower`)"
      entryPoints:
        - flower
      middlewares:
        - "flower-ratelimit"
      service: flower
      priority: 0
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

    frontend-secure-router:
      rule: "(Host(`opencontracts.opensource.legal`) || Host(`www.opencontracts.opensource.legal`) || Host(`localhost`)) && !PathPrefix(`/graphql`) && !PathPrefix(`/admin`) && !PathPrefix(`/flower`)"
      entryPoints:
        - "web-secure"
      middlewares:
        - "frontend-ratelimit"
        - "csrf"
      service: frontend
      priority: 1
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

    web-secure-router:
      rule: "(Host(`opencontracts.opensource.legal`) || Host(`www.opencontracts.opensource.legal`) || Host(`localhost`)) && (PathPrefix(`/graphql`) || PathPrefix(`/admin`))"
      entryPoints:
        - "web-secure"
      middlewares:
        - "api-ratelimit"
        - "csrf"
      service: django
      priority: 2
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt

  middlewares:
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: [ "X-CSRFToken" ]

    # Rate limiting for frontend (static content) - higher limits
    frontend-ratelimit:
      rateLimit:
        average: 10   # 10 requests per second on average
        burst: 20     # Allow bursts up to 20 requests
        period: 1s    # Per second rate limiting
        sourceCriterion:
          ipStrategy:
            depth: 1  # Look at X-Forwarded-For header, 1 hop back
            ipv6Subnet: 64  # Group IPv6 addresses by /64 subnet
        redis:
          endpoints:
            - "redis:6379"
          db: 1  # Use database 1 for rate limiting
          poolSize: 10
          minIdleConns: 2
          maxActiveConns: 20
          readTimeout: 3s
          writeTimeout: 3s
          dialTimeout: 5s

    # Rate limiting for API/GraphQL/Admin - medium limits
    api-ratelimit:
      rateLimit:
        average: 5    # 5 requests per second on average
        burst: 10     # Allow bursts up to 10 requests
        period: 1s    # Per second rate limiting
        sourceCriterion:
          ipStrategy:
            depth: 1  # Look at X-Forwarded-For header, 1 hop back
            ipv6Subnet: 64  # Group IPv6 addresses by /64 subnet
        redis:
          endpoints:
            - "redis:6379"
          db: 1  # Use database 1 for rate limiting
          poolSize: 10
          minIdleConns: 2
          maxActiveConns: 20
          readTimeout: 3s
          writeTimeout: 3s
          dialTimeout: 5s

    # Rate limiting for Flower (monitoring) - lower limits
    flower-ratelimit:
      rateLimit:
        average: 10   # 10 requests per second on average
        burst: 20     # Allow bursts up to 20 requests
        period: 1s    # Per second rate limiting
        sourceCriterion:
          ipStrategy:
            depth: 1  # Look at X-Forwarded-For header, 1 hop back
            ipv6Subnet: 64  # Group IPv6 addresses by /64 subnet
        redis:
          endpoints:
            - "redis:6379"
          db: 1  # Use database 1 for rate limiting
          poolSize: 5
          minIdleConns: 1
          maxActiveConns: 10
          readTimeout: 3s
          writeTimeout: 3s
          dialTimeout: 5s

  services:

    frontend:
      loadBalancer:
        servers:
          - url: http://frontend:5173

    django:
      loadBalancer:
        servers:
          - url: http://django:5000

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true

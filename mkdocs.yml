site_name: OpenContracts
site_description: Open, Extensible Document Analytics Platform
site_author: John Scrudato IV
site_url: https://jsv4.github.io/OpenContracts/
repo_name: JSv4/OpenContracts
repo_url: https://github.com/JSv4/OpenContracts
edit_uri: blob/master/docs
copyright: 'Copyright &copy; John Scrudato 2022-present'

docs_dir: docs
site_dir: site

theme:
  name: material
  custom_dir: docs/.overrides
  language: en
  favicon: assets/images/logos/favicon.ico
  logo: assets/images/logos/os_legal_128_inverted.png
  font:
    text: Roboto
    code: Roboto Mono
  palette:
    - media: "(prefers-color-scheme: dark)"
      scheme: slate
      primary: indigo
      accent: indigo
      toggle:
        icon: material/weather-night
        name: Switch to light mode
    - media: "(prefers-color-scheme: light)"
      scheme: default
      primary: indigo
      accent: indigo
      toggle:
        icon: material/weather-sunny
        name: Switch to dark mode
  features:
    - navigation.sections
    - navigation.expand
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.instant

nav:
  - Home:
    - About: index.md
    - Philosophy: philosophy.md
    - Quick Start: quick_start.md
    - System Requirements: requirements.md
    - How It Works:
        - System Architecture: architecture/components/Data-flow-diagram.md
        - PDF Data Layer: architecture/PDF-data-layer.md
        - Asynchronous Processing: architecture/asynchronous-processing.md
        - Document Analyzers: architecture/analyzers.md
        - Automatic Corpus Actions: architecture/opencontract-corpus-actions.md
        - Annotator Component: architecture/components/annotator/current-state/overview.md
        - Annotation Creation Logic: architecture/components/annotator/current-state/how-annotations-are-created.md
        - State Management: architecture/components/annotator/current-state/state-management.md
        - Virtualized Rendering: architecture/components/annotator/current-state/virtualized-rendering.md
    - Acknowledgements: acknowledgements.md
  - Walkthrough:
      - Key Concepts: walkthrough/key-concepts.md
      - Step 1 - Add Documents: walkthrough/step-1-add-documents.md
      - Step 2 - Create Labelset: walkthrough/step-2-create-labelset.md
      - Step 3 - Create Corpus: walkthrough/step-3-create-a-corpus.md
      - Step 4 - Create Text Annotations: walkthrough/step-4-create-text-annotations.md
      - Step 5 - Create Document Annotations: walkthrough/step-5-create-doc-type-annotations.md
      - Step 6 - Search and Filter By Annotations: walkthrough/step-6-search-and-filter-by-annotations.md
      - Step 7 - Query a Corpus: walkthrough/step-7-query-corpus.md
      - Step 8 - Data Extract: walkthrough/step-8-data-extract.md
      - Step 9 - Automatic Corpus Actions: walkthrough/step-9-corpus-actions.md
      - Advanced:
          - Data Extract Models: walkthrough/advanced/data-extract-models.md
          - Write Document Analyzers: walkthrough/advanced/register-doc-analyzer.md
          - Write Custom Extractors: walkthrough/advanced/write-your-own-extractors.md
          - Configure Annotation Display: walkthrough/advanced/configure-annotation-view.md
          - Fork a Corpus: walkthrough/advanced/fork-a-corpus.md
          - Import and Export Corpuses: walkthrough/advanced/export-import-corpuses.md
          - Generate GraphQL Schema Files: walkthrough/advanced/generate-graphql-schema-files.md
          - PAWLS Token Format: walkthrough/advanced/pawls-token-format.md
  - Extract & Retrieval:
      - Overview: extract_and_retrieval/README.md
      - API Reference: extract_and_retrieval/api_reference.md
      - Vector Stores: extract_and_retrieval/vector_stores.md
      - Corpus Queries: extract_and_retrieval/corpus_queries.md
      - Data Extraction: extract_and_retrieval/data_extraction.md
      - Document Data Extract: extract_and_retrieval/document_data_extract.md
      - Django Vector Store Integration: extract_and_retrieval/intro_to_django_annotation_vector_store.md
      - Querying Corpus: extract_and_retrieval/querying_corpus.md
  - Metadata System:
      - Overview: metadata/metadata_overview.md
      - Metadata Fields: metadata/metadata_fields.md
      - API Examples: metadata/metadata_api_examples.md
      - Frontend Requirements: metadata/metadata_frontend_requirements.md
  - Configuration:
      - Choose Docker Stack: configuration/choose-and-configure-docker-stack.md
      - Configure Admin Users: configuration/configure-admin-users.md
      - Authentication Backend: configuration/choose-an-authentication-backend.md
      - Frontend Configuration: configuration/frontend-configuration.md
      - Add Users: configuration/add-users.md
      - Storage Backend: configuration/choose-storage-backend.md
  - Pipelines:
      - Pipeline Overview: pipelines/pipeline_overview.md
      - Docling Parser: pipelines/docling_parser.md
  - Embedders:
      - ModernBERT Embedder: embedders/modernbert_embedder.md
      - MiniLM ModernBERT Embedder: embedders/minn_modernbert_embedder.md
  - Frontend:
      - Routing System: frontend/routing_system.md
      - Document Rendering: frontend/document_rendering_and_annotation.md
      - Search Rendering: frontend/search_rendering.md
      - Corpus Dependencies: frontend/corpus-dependencies-inventory.md
      - Document Viewer Strategy: frontend/document-viewer-without-corpus-strategy.md
      - Read Only Mode: frontend/read_only_mode_inventory.md
      - Make Corpus Optional: frontend/make-corpus-optional-developer-tasks.md
      - Corpus Selection: frontend/corpus-and-document-selection.md
      - DataGrid:
          - Custom Cell Rendering: frontend/datagrid/rendering_custom_cells.md
  - Permissions:
      - Overview: permissioning/README.md
      - Consolidated Guide: permissioning/consolidated_permissioning_guide.md
      - Read Only Mode: permissioning/read_only_mode.md
      - Corpus Optional Features: permissioning/corpus_optional_features.md
      - Testing Permissions: permissioning/testing_permissions.md
  - Corpus Actions:
      - Introduction: corpus_actions/intro_to_corpus_actions.md
  - API Documentation:
      - Smart Label Mutations: api/smart-label-mutations.md
  - Development:
      - Dev Environment: development/environment.md
      - Test Suite: development/test-suite.md
      - Frontend Notes: development/frontend-notes.md
      - Documentation: development/documentation.md
      - Generating GraphQL Schema: development/generating-new-graphql-schema.md
  - Deployment:
      - Docker GPU Setup: deployment/docker-gpu-setup.md

plugins:
  # Built-in
  search: {}
  # Extra
  glightbox: {}
  minify:
    minify_html: true
  git-revision-date-localized:
    type: date
    # Required for blog plugin's generated indices
    fallback_to_build_date: true
  mike:
    alias_type: copy
  mkdocstrings:
    default_handler: python
    handlers:
      python:
        paths:
          - src
        options:
          # Headings
          show_root_heading: true
          show_root_full_path: false
          # Docstrings
          show_if_no_docstring: true
          # Signatures/annotations
          show_signature_annotations: true
          # Other
          show_bases: false

markdown_extensions:
  # Built-in
  - markdown.extensions.abbr:
  - markdown.extensions.admonition:
  - markdown.extensions.attr_list:
  - markdown.extensions.footnotes:
  - markdown.extensions.meta:
  - markdown.extensions.tables:
  - markdown.extensions.toc:
      permalink: true
  # Extra
  - mkdocs-click:
  - pymdownx.arithmatex:
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret:
  - pymdownx.critic:
  - pymdownx.details:
  - pymdownx.highlight:
      guess_lang: false
      linenums_style: pymdownx-inline
      use_pygments: true
  - pymdownx.inlinehilite:
  - pymdownx.keys:
  - pymdownx.magiclink:
      repo_url_shortener: true
      repo_url_shorthand: true
      social_url_shortener: true
      social_url_shorthand: true
      normalize_issue_symbols: true
      provider: github
      user: jsv4
      repo: OpenContracts
  - pymdownx.mark:
  - pymdownx.progressbar:
  - pymdownx.saneheaders:
  - pymdownx.smartsymbols:
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.tilde:

extra:
  version:
    provider: mike
  consent:
    title: Cookie consent
    description: >-
      We use cookies to recognize your repeated visits and preferences, as well
      as to measure the effectiveness of our documentation and whether users
      find what they're searching for. With your consent, you're helping us to
      make our documentation better.

extra_css:
  - assets/css/custom.css
  - https://cdn.jsdelivr.net/gh/tonsky/FiraCode@5.2/distr/fira_code.css
